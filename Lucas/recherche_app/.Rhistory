###################################################################
# scale_fill_gradientn(colours = c(
#   rgb(3,77,0, maxColorValue = 255),
#   "cyan",
#   "white",
#   rgb(255, 255 ,51, maxColorValue = 255),
#   rgb(212,92,22, maxColorValue = 255)),
#                        values = scales::rescale(c(min(S), -0.5, 0, 0.5,  max(S))))+
###################################################################
scale_fill_gradientn(colours = c(
rgb(201,9,9, maxColorValue = 255),
rgb(255, 122 ,243, maxColorValue = 255),
"white",
"cyan",
rgb(14,18,77, maxColorValue = 255)),
limits = c(-max(abs(S)), max(abs(S))))+
#####################################################################
#rescaler=function(S, ...) S, oob=identity) +
#scale_fill_gradientn(colours = c("firebrick4","firebrick1","white","deepskyblue1","deepskyblue4"), breaks=MS) +
#scale_fill_gradientn(colours = c("red","white","deepskyblue3","deepskyblue2","deepskyblue3"), breaks=MS) +
# S discrete
#scale_fill_brewer(palette="Spectral")+
#scale_fill_manual(breaks= quantile(S), values=c('white','cyan','turquoise2','blue2')) +
# xlim(0, 5) +
#  ylim(0, 5) +
xlab("X")+
ylab("Y")
return(list(plotscatter,plotnetrec, plotnetrec2))
}
graphique <- function(data, show_scatter = F){
graphiques <- graph_plotnetrec(data)
if(show_scatter == T){
return(grid.arrange(graphiques[[1]], graphiques[[2]]), graphique[[3]], nrow = 3)
}else{
return(graphiques[[2]], graphiques[[3]], nrow = 3)
}
}
### Normal case positive
N=200
X <- sort(rnorm(N, 40, 100))
Y <- 1 + 2*X + rnorm(N, 0, 200) # forte variance
data <- data.frame(X,Y)
graphique(data, show_scatter = T)
knitr::opts_chunk$set(fig.width=13, fig.height=10,
fig.align='center', echo = FALSE,
warning=FALSE, message=FALSE)
library(tidyverse)
library(gridExtra)
library(tibble)
library(ggplot2)
library(knitr)
library(UsingR)
library(skimr)
library(pastecs)
#library(summarytools)
library(psych)
library(kableExtra)
library(grid)
library(TeachingDemos)
library('MASS')
library(forecast)
library(fpp2)
library(scales)
library(RColorBrewer)
library("cowplot")
library(extrafont)
library(plotly)
library(sfsmisc)
library(patternplot)
library(stargazer)
library(latex2exp)
library(dplyr)
library(gridExtra)
library(scales)
theme_set(theme_minimal())
### Normal case positive
N=200
X <- sort(rnorm(N, 40, 100))
Y <- 1 + 2*X + rnorm(N, 0, 200) # forte variance
data <- data.frame(X,Y)
graphique(data, show_scatter = T)
graphique <- function(data, show_scatter = F){
graphiques <- graph_plotnetrec(data)
if(show_scatter == T){
return(grid.arrange(graphiques[[1]], graphiques[[2]], graphique[[3]], nrow = 3))
}else{
return(graphiques[[2]], graphiques[[3]], nrow = 3)
}
}
graphique <- function(data, show_scatter = F){
graphiques <- graph_plotnetrec(data)
if(show_scatter == T){
return(grid.arrange(graphiques[[1]], graphiques[[2]], graphique[[3]], nrow = 3))
}else{
return(grid.arrange(graphiques[[2]], graphiques[[3]], nrow = 3))
}
}
### Normal case negative
N=400
X <- sort(rnorm(N, 40, 100))
Y <- 1 - 2*X + rnorm(N, 0, 200) # forte variance
data <- data.frame(X,Y)
graphique(data, show_scatter = T)
View(graph_plotnetrec)
View(graphique)
View(data)
remotes::install_github("rstudio/bootstraplib")
devtools::install_github("rstudio/bootstraplib")
install.packages('Rtools')
devtools::install_github("rstudio/bootstraplib", force = TRUE)
devtools::install_github("rstudio/bootstraplib", force = TRUE)
remotes::install_github("rstudio/bootstraplib")
remotes::install_github("rstudio/bootstraplib", force = TRUE)
remotes::install_github("rstudio/bootstraplib", force = TRUE)
remotes::install_github("rstudio/bootstraplib")
devtools::install_github("rstudio/bootstraplib")
devtools::install_github("rstudio/bootstraplib", force = TRUE)
library(bootstrap)
library(bootstrapLib)
library(bootstraplib)
remotes::install_github("rstudio/bootstraplib")
remotes::install_github("rstudio/bootstraplib", force = TRUE)
library(bootstraplib)
devtools::install_github("rstudio/bootstraplib", force = TRUE)
library(bootstraplib)
install.Rtools(check = TRUE, check_r_update = TRUE, GUI = TRUE)
install.Rtools(check = TRUE, check_r_update = TRUE, GUI = TRUE, ...)
install.packages('installr')
install.Rtools(check = TRUE, check_r_update = TRUE, GUI = TRUE, ...)
install.Rtools(check = TRUE, check_r_update = TRUE, GUI = TRUE
)
installr::install.Rtools(check = TRUE, check_r_update = TRUE, GUI = TRUE)
devtools::install_github("rstudio/bootstraplib")
devtools::install_github("rstudio/bootstraplib", force = TRUE)
remotes::install_github("rstudio/bootstraplib", force = TRUE)
remotes::install_github("rstudio/bootstraplib", force = TRUE)
remotes::install_github("rstudio/bootstraplib", force = TRUE)
library(bootstraplib)
devtools::install_github("rstudio/bootstraplib", force = TRUE)
shiny::runApp('M2/S2/Big data/VG_Shiny/Lucas/recherche_style/app')
shiny::runApp('M2/S2/Big data/VG_Shiny/Lucas/recherche_style/app')
runApp('M2/S2/Big data/VG_Shiny/Lucas/recherche_style/app')
runApp('M2/S2/Big data/VG_Shiny/Lucas/recherche_style/app')
runApp('M2/S2/Big data/VG_Shiny/Lucas/recherche_style/app')
shiny::runApp('M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('M2/S2/Big data/VG_Shiny/Lucas/recherche_style/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('M2/S2/Big data/VG_Shiny/Lucas/app')
shiny::runApp('M2/S2/Big data/VG_Shiny/Guillaume')
runApp('M2/S2/Big data/VG_Shiny/Lucas/app')
## importer data_jeux2 avec 130000 observations as data
library(tidyverse)
## impo
data2 <- readRDS("data_jeux_image.rds")
data.merge <- data %>% select("titre", "published":"misc")
data.merge <- data.merge[!duplicated(data.merge$titre),]
data.test <- data2%>%
left_join(data.merge, c("Name" = "titre"))
creer_html<-function(Name, image, published, developed, released, platform.y, genre, perspective, gameplay, setting, narrative, misc, edition, visual){
valeur = paste0("<h1>",Name,"</h1><br></br>","<table class=\"pct100\"><tbody><tr valign=\"top\"><td width=\"1%\"><div id=\"coreGameCover\">")
if(is.na(image) == F){
valeur = paste(
valeur, image %>%
str_replace('src=\"/', "src=\"https://www.mobygames.com/"))
}else{
valeur = paste(valeur,
"<img alt=\"Alone in the Dark DOS Front Cover\" border=\"0\" src=\"https://lh6.googleusercontent.com/proxy/ArqMUjwLTH8fwuNnxIWgh6VJ96iZRNrC2cCd9A-0Sz_yOqz2zo0mstHMh1etS0D8Ap6kz6XQT4C5yY1YjGaDkX5zB-G_CFhFlb4y7_ePBIlknO351AHIDLVG0VsQw_KQti3uuOkqHbE=w1200-h630-p-k-no-nu\" height=\"120\" width=\"120\">")
}
valeur = paste0(valeur, "</td><td width=\"48%\"><div id=\"coreGameRelease\">")
if(is.na(published) == FALSE){
valeur = paste(
valeur, "<div style=\"font-size: 100%; font-weight: bold;\">Published by</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",published %>% str_replace_all("\\&nbsp;", " "),"</div>"
)
}
if(is.na(developed) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Developed by</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",developed %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(released) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Released</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",released %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(platform.y) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Platforms</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",platform.y %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
valeur = paste(
valeur,
"</div></td><td width=\"48%\"><div id=\"coreGameGenre\"><div>")
if(is.na(genre) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Genre</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",genre %>% str_replace_all("\\&nbsp;", " ") %>%  str_replace_all(" /", ","),"</div>")
}
if(is.na(gameplay) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Gameplay</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",gameplay %>% str_replace_all("\\&nbsp,", " ") %>%  str_replace_all(" /", ","),"</div>")
}
if(is.na(perspective) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Perspective</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",perspective %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(setting) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Setting</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",setting %>% str_replace_all("\\&nbsp;", " ") %>% str_replace_all(" /", ","),"</div>")
}
if(is.na(narrative) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Narrative</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",narrative %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(edition) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Edition</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",edition %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(visual) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Visual</div>
<div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",visual %>% str_replace_all("\\&nbsp;", " ") %>% str_replace_all(" /", ","),"</div>")
}
if(is.na(misc) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Misc</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",misc %>% str_replace_all("\\&nbsp", " "),"</div>")
}
valeur = paste(valeur,"</div></div></td></tr></tbody></table>  ")
return(valeur)
}
creer_html <- Vectorize(creer_html)
data_test <- data.test  %>%
mutate(code_html = creer_html(Name = Name, image = image, published = published, developed = developed, released = released, platform.y = platform.y, genre = genre, perspective = perspective, gameplay = gameplay, setting = setting, narrative = narrative, misc = misc, edition = edition, visual = visual))
data_test[1400,2]
data_test <- data_test %>%
select(Name, code_html)
saveRDS(data_test, file = "C:\\Users\\Lucas\\Documents\\M2\\S2\\Big data\\data\\data_jeux_code_html.rds")
data2 <- readRDS("~/M2/S2/Big data/VG_Shiny/Lucas/app/data_jeux_image.rds")
data <- readRDS("~/M2/S2/Big data/VG_Shiny/Lucas/recherche_app/data_jeux_2.rds")
## importer data_jeux2 avec 130000 observations as data
library(tidyverse)
## impo
data2 <- readRDS("data_jeux_image.rds")
data.merge <- data %>% select("titre", "published":"misc")
data.merge <- data.merge[!duplicated(data.merge$titre),]
data.test <- data2%>%
left_join(data.merge, c("Name" = "titre"))
creer_html<-function(Name, image, published, developed, released, platform.y, genre, perspective, gameplay, setting, narrative, misc, edition, visual){
valeur = paste0("<h1>",Name,"</h1><br></br>","<table class=\"pct100\"><tbody><tr valign=\"top\"><td width=\"1%\"><div id=\"coreGameCover\">")
if(is.na(image) == F){
valeur = paste(
valeur, image %>%
str_replace('src=\"/', "src=\"https://www.mobygames.com/"))
}else{
valeur = paste(valeur,
"<img alt=\"Alone in the Dark DOS Front Cover\" border=\"0\" src=\"https://lh6.googleusercontent.com/proxy/ArqMUjwLTH8fwuNnxIWgh6VJ96iZRNrC2cCd9A-0Sz_yOqz2zo0mstHMh1etS0D8Ap6kz6XQT4C5yY1YjGaDkX5zB-G_CFhFlb4y7_ePBIlknO351AHIDLVG0VsQw_KQti3uuOkqHbE=w1200-h630-p-k-no-nu\" height=\"120\" width=\"120\">")
}
valeur = paste0(valeur, "</td><td width=\"48%\"><div id=\"coreGameRelease\">")
if(is.na(published) == FALSE){
valeur = paste(
valeur, "<div style=\"font-size: 100%; font-weight: bold;\">Published by</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",published %>% str_replace_all("\\&nbsp;", " "),"</div>"
)
}
if(is.na(developed) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Developed by</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",developed %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(released) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Released</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",released %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(platform.y) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Platforms</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",platform.y %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
valeur = paste(
valeur,
"</div></td><td width=\"48%\"><div id=\"coreGameGenre\"><div>")
if(is.na(genre) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Genre</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",genre %>% str_replace_all("\\&nbsp;", " ") %>%  str_replace_all(" /", ","),"</div>")
}
if(is.na(gameplay) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Gameplay</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",gameplay %>% str_replace_all("\\&nbsp,", " ") %>%  str_replace_all(" /", ","),"</div>")
}
if(is.na(perspective) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Perspective</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",perspective %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(setting) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Setting</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",setting %>% str_replace_all("\\&nbsp;", " ") %>% str_replace_all(" /", ","),"</div>")
}
if(is.na(narrative) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Narrative</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",narrative %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(edition) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Edition</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",edition %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(visual) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Visual</div>
<div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",visual %>% str_replace_all("\\&nbsp;", " ") %>% str_replace_all(" /", ","),"</div>")
}
if(is.na(misc) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Misc</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",misc %>% str_replace_all("\\&nbsp", " "),"</div>")
}
valeur = paste(valeur,"</div></div></td></tr></tbody></table>  ")
return(valeur)
}
creer_html <- Vectorize(creer_html)
data_test <- data.test  %>%
mutate(code_html = creer_html(Name = Name, image = image, published = published, developed = developed, released = released, platform.y = platform.y, genre = genre, perspective = perspective, gameplay = gameplay, setting = setting, narrative = narrative, misc = misc, edition = edition, visual = visual))
data_test[1400,2]
data_test <- data_test %>%
select(Name, code_html)
saveRDS(data_test, file = "C:\\Users\\Lucas\\Documents\\M2\\S2\\Big data\\data\\data_jeux_code_html.rds")
## importer data_jeux2 avec 130000 observations as data
library(tidyverse)
## impo
data2 <- readRDS("data_jeux_image.rds")
data.merge <- data %>% select("titre", "published":"misc")
data.merge <- data.merge[!duplicated(data.merge$titre),]
data.test <- data2%>%
left_join(data.merge, c("Name" = "titre"))
creer_html<-function(Name, image, published, developed, released, platform.y, genre, perspective, gameplay, setting, narrative, misc, edition, visual){
valeur = paste0("<h1>",Name,"</h1><br></br>","<table class=\"pct100\"><tbody><tr valign=\"top\"><td width=\"1%\"><div id=\"coreGameCover\">")
if(is.na(image) == F){
valeur = paste(
valeur, image %>%
str_replace('src=\"/', "src=\"https://www.mobygames.com/"))
}else{
valeur = paste(valeur,
"<img alt=\"Alone in the Dark DOS Front Cover\" border=\"0\" src=\"https://lh6.googleusercontent.com/proxy/ArqMUjwLTH8fwuNnxIWgh6VJ96iZRNrC2cCd9A-0Sz_yOqz2zo0mstHMh1etS0D8Ap6kz6XQT4C5yY1YjGaDkX5zB-G_CFhFlb4y7_ePBIlknO351AHIDLVG0VsQw_KQti3uuOkqHbE=w1200-h630-p-k-no-nu\" height=\"120\" width=\"120\">")
}
valeur = paste0(valeur, "</td><td width=\"48%\"><div id=\"coreGameRelease\">")
if(is.na(published) == FALSE){
valeur = paste(
valeur, "<div style=\"font-size: 100%; font-weight: bold;\">Published by</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",published %>% str_replace_all("\\&nbsp;", " "),"</div>"
)
}
if(is.na(developed) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Developed by</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",developed %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(released) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Released</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",released %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(platform.y) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Platforms</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",platform.y %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
valeur = paste(
valeur,
"</div></td><td width=\"48%\"><div id=\"coreGameGenre\"><div>")
if(is.na(genre) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Genre</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",genre %>% str_replace_all("\\&nbsp;", " ") %>%  str_replace_all(" /", ","),"</div>")
}
if(is.na(gameplay) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Gameplay</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",gameplay %>% str_replace_all("\\&nbsp,", " ") %>%  str_replace_all(" /", ","),"</div>")
}
if(is.na(perspective) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Perspective</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",perspective %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(setting) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Setting</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",setting %>% str_replace_all("\\&nbsp;", " ") %>% str_replace_all(" /", ","),"</div>")
}
if(is.na(narrative) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Narrative</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",narrative %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(edition) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Edition</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",edition %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(visual) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Visual</div>
<div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",visual %>% str_replace_all("\\&nbsp;", " ") %>% str_replace_all(" /", ","),"</div>")
}
if(is.na(misc) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Misc</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",misc %>% str_replace_all("\\&nbsp", " "),"</div>")
}
valeur = paste(valeur,"</div></div></td></tr></tbody></table>  ")
return(valeur)
}
creer_html <- Vectorize(creer_html)
data_test <- data.test  %>%
mutate(code_html = creer_html(Name = Name, image = image, published = published, developed = developed, released = released, platform.y = platform.y, genre = genre, perspective = perspective, gameplay = gameplay, setting = setting, narrative = narrative, misc = misc, edition = edition, visual = visual))
data_test[1400,2]
data_test <- data_test %>%
select(Name, code_html)
saveRDS(data_test, file = "C:\\Users\\Lucas\\Documents\\M2\\S2\\Big data\\data\\data_jeux_code_html.rds")
shiny::runApp('M2/S2/Big data/VG_Shiny/Lucas/app')
setwd("~/M2/S2/Big data/VG_Shiny/Lucas/recherche_app")
knitr::opts_chunk$set(echo = TRUE)
df2 <- readRDS('data_jeux_image.rds')
df2 <- df2 %>%
left_join(readRDS("data_jeux_code_html.rds"), c("Name" = "Name"))
View(df2)
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
df2 <- readRDS('data_jeux_image.rds')
df2 <- df2 %>%
left_join(readRDS("data_jeux_code_html.rds"), c("Name" = "Name")) %>% unique()
runApp('~/M2/S2/Big data/VG_Shiny/Guillaume')
runApp('~/M2/S2/Big data/VG_Shiny/Guillaume')
runApp('~/M2/S2/Big data/VG_Shiny/Guillaume')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
data_jeux_code_html <- readRDS("~/M2/S2/Big data/VG_Shiny/Lucas/recherche_app/data_jeux_code_html.rds")
data_jeux_code_html[1,2]
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
data_jeux_code_html[1,3]
data_jeux_code_html[3,2]
data_jeux_code_html[4,2]
data_jeux_code_html[5,2]
data_jeux_code_html[123,2]
data_jeux_image <- readRDS("~/M2/S2/Big data/VG_Shiny/Lucas/recherche_app/data_jeux_image.rds")
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
View(data_jeux_image)
data_jeux_code_html[68518,2]
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
runApp('~/M2/S2/Big data/VG_Shiny/Lucas/app')
data <- readRDS("~/M2/S2/Big data/VG_Shiny/Lucas/recherche_app/data_jeux_2.rds")
## importer data_jeux2 avec 130000 observations as data
library(tidyverse)
## impo
data2 <- readRDS("data_jeux_image.rds")
data.merge <- data %>% select("titre", "published":"misc")
data.merge <- data.merge[!duplicated(data.merge$titre),]
data.test <- data2%>%
left_join(data.merge, c("Name" = "titre"))
creer_html<-function(Name, image, published, developed, released, platform.y, genre, perspective, gameplay, setting, narrative, misc, edition, visual){
valeur = paste0("<h1>",Name,"</h1><br></br>","<table class=\"pct100\"><tbody><tr valign=\"top\"><td width=\"1%\"><div id=\"coreGameCover\">")
if(is.na(image) == F){
valeur = paste(
valeur, image %>%
str_replace('src=\"/', "src=\"https://www.mobygames.com/"))
}else{
valeur = paste(valeur,
"<img alt=\"Alone in the Dark DOS Front Cover\" border=\"0\" src=\"https://lh6.googleusercontent.com/proxy/ArqMUjwLTH8fwuNnxIWgh6VJ96iZRNrC2cCd9A-0Sz_yOqz2zo0mstHMh1etS0D8Ap6kz6XQT4C5yY1YjGaDkX5zB-G_CFhFlb4y7_ePBIlknO351AHIDLVG0VsQw_KQti3uuOkqHbE=w1200-h630-p-k-no-nu\" height=\"120\" width=\"120\">")
}
valeur = paste0(valeur, "</div></td><td width=\"48%\"><div id=\"coreGameRelease\">")
if(is.na(published) == FALSE){
valeur = paste(
valeur, "<div style=\"font-size: 100%; font-weight: bold;\">Published by</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",published %>% str_replace_all("\\&nbsp;", " "),"</div>"
)
}
if(is.na(developed) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Developed by</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",developed %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(released) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Released</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",released %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(platform.y) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Platforms</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",platform.y %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
valeur = paste(
valeur,
"</div></td><td width=\"48%\"><div id=\"coreGameGenre\"><div>")
if(is.na(genre) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Genre</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",genre %>% str_replace_all("\\&nbsp;", " ") %>%  str_replace_all(" /", ","),"</div>")
}
if(is.na(gameplay) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Gameplay</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",gameplay %>% str_replace_all("\\&nbsp,", " ") %>%  str_replace_all(" /", ","),"</div>")
}
if(is.na(perspective) == FALSE){
valeur = paste(valeur,
"<div style=\"font-size: 100%; font-weight: bold;\">Perspective</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",perspective %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(setting) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Setting</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",setting %>% str_replace_all("\\&nbsp;", " ") %>% str_replace_all(" /", ","),"</div>")
}
if(is.na(narrative) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Narrative</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",narrative %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(edition) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Edition</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",edition %>% str_replace_all("\\&nbsp;", " "),"</div>")
}
if(is.na(visual) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Visual</div>
<div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",visual %>% str_replace_all("\\&nbsp;", " ") %>% str_replace_all(" /", ","),"</div>")
}
if(is.na(misc) == FALSE){
valeur = paste(valeur,"<div style=\"font-size: 100%; font-weight: bold;\">Misc</div><div style=\"font-size: 90%; padding-left: 1em; padding-bottom: 0.25em;\">",misc %>% str_replace_all("\\&nbsp", " "),"</div>")
}
valeur = paste(valeur,"</div></td></tr></tbody></table>  ")
return(valeur)
}
creer_html <- Vectorize(creer_html)
data_test <- data.test  %>%
mutate(code_html = creer_html(Name = Name, image = image, published = published, developed = developed, released = released, platform.y = platform.y, genre = genre, perspective = perspective, gameplay = gameplay, setting = setting, narrative = narrative, misc = misc, edition = edition, visual = visual))
data_test[1400,2]
data_test <- data_test %>%
select(Name, code_html)
saveRDS(data_test, file = "C:\\Users\\Lucas\\Documents\\M2\\S2\\Big data\\data\\data_jeux_code_html.rds")
data_test <- data.test  %>%
mutate(code_html = creer_html(Name = Name, image = image, published = published, developed = developed, released = released, platform.y = platform.y, genre = genre, perspective = perspective, gameplay = gameplay, setting = setting, narrative = narrative, misc = misc, edition = edition, visual = visual))
